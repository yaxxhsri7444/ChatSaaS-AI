PORT=4000
MONGO_URI=mongodb://localhost:27017/chatsaas
JWT_SECRET=sPaRkAsChHaIm7444
OPENAI_API_KEY=sk-REPLACE_WITH_YOURS
EMBEDDING_MODEL=text-embedding-3-small
LLM_MODEL=gpt-4o-mini
VECTOR_COLLECTION=vectors 
MAX_CHUNK_SIZE=800


# curl ^
#   -H "Authorization: Bearer KL2HYWTOTU4C4YL7QQ3SYEZLFUYFL7HR" ^
#   "https://api.wit.ai/message?v=20250911&q=chatsaasAi"
# import {QdrantClient} from '@qdrant/js-client-rest';

# const client = new QdrantClient({
#     url: 'https://1b64355b-ed46-4e55-bbde-5239ee6ca12a.us-east4-0.gcp.cloud.qdrant.io:6333',
#     apiKey: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3MiOiJtIn0.PkPKs7xZeMSqkqIhLOY16uNXolGW7rRjal4z0mtMLRw',
# });

# try {
#     const result = await client.getCollections();
#     console.log('List of collections:', result.collections);
# } catch (err) {
#     console.error('Could not get collections:', err);
# }

  
# Qdrant
QDRANT_URL=https://1b64355b-ed46-4e55-bbde-5239ee6ca12a.us-east4-0.gcp.cloud.qdrant.io:6333
QDRANT_API_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY2Nlc3MiOiJtIn0.PkPKs7xZeMSqkqIhLOY16uNXolGW7rRjal4z0mtMLRw

# Wit.ai (NLU)
WITAI_TOKEN=KL2HYWTOTU4C4YL7QQ3SYEZLFUYFL7HR

# Embeddings provider (pluggable)
# If you have Google Gemini embeddings API, set GEMINI_API_KEY and GEMINI_ENDPOINT
GEMINI_API_KEY=AIzaSyBNLL1WaY6eXlKhJmn64ntaUiC1EIlTdC8
GEMINI_ENDPOINT=

# Fallback to HuggingFace remote inference (optional)
HF_INFERENCE_API_KEY=

# Embedding model settings
EMBEDDING_CHUNK_SIZE=800
EMBEDDING_MODEL=all-MiniLM-L6-v2

# Storage (for demo we store uploads locally)
UPLOAD_DIR=uploads